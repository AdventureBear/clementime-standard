html(ng-app="clementineJS")
	head
		title clementine.js - A lightweight MEAN stack boilerplate.
		link(type="text/css" rel="stylesheet" href="public/css/main.css")
	body(ng-controller="linkCtrlr")
		.navbar
			h1
				a.nav-logo(href="/")
			ul.nav
				li.nav-button(href="/" material-ripple="") FEATURES
				li.nav-button(href="/" material-ripple="") DOCS

		.banner
			.banner-background
				.title
					img.logo(src="public/img/clementine_white.png")
					.clemjs clementine.js
							p A lightweight MEAN boilerplate.

							.buttons
								a.twitter(href="https://twitter.com/johnstonbl01" material-ripple="" ng-click="delayLink($event)")
									img(src="public/img/twitter_logo_32x26.png")
								a.github(href="https://github.com/johnstonbl01/clementinejs" target="_blank" material-ripple="" ng-click="delayLink($event)")
									img(src="public/img/github_32px.png")
								a.email(href="mailto:johnstonbl01@gmail.com" target="_blank" material-ripple="" ng-click="delayLink($event)")
									img(src="public/img/mail_32x28.png")
		.content
			
			.divider

			.container

				.about 
					p
						| Clementine.js started as a personal project to create boilerplate that would help me easily stand up
						| a new project using the MEAN stack (MongoDB, Express.js, Angular.js & Node.js). As a novice, I found
						| that other boilerplates were often too feature-rich and contained a lot of overhead.
						br
						br
						| The purpose of Clementine.js is to provide a lightweight boilerplate for projects where the developer
						| wishes to perform most of the integration himself without having to remove many (or any) features.
						br
						br
						| Currently, Clementine.js is relatively simple and lacks a few essential features: linting & tests to name
						| a few. However, I believe that it can be a great start for many beginner-level projects. Over the course
						| of the next several months, Clementine.js will evolve to include the missing features and offer a rich, 
						| but still lightweight boilerplate for MEAN projects.
				
				.comments(ng-controller="commentCtrlr")

					ul.commentlist
						li(ng-repeat="comment in comments")
							p "{{comment.comments}}"
							p#commentemail - {{comment.email}}
					
					form(ng-submit="createComment()").newcomment
						input(type="text" ng-model="commentEmail" placeholder="email address")
						input(type="text" ng-model="commentBody" placeholder="comment")
						button(type="submit") Save Comment
						button(type="submit" ng-click="deleteComments()") Delete All Comments

				.features
					p
						| Clementine.js features utilizes a few libraries to make your development life easier, and
						| features a fully integrated build system via Gulp.js.
						br
						br
						| MongoDB Node.js Angular.js Express.js Jade Sass Bower Gulp Mongoose			


		script(type="text/javascript" src="/public/lib/angular/angular.min.js")
		script(type="text/javascript" src="/public/lib/angular-resource/angular-resource.min.js")
		script(type="text/javascript" src="/public/application.js")
		script(type="text/javascript" src="/directives/materialRipple.js")
		script(type="text/javascript" src="/controllers/commentCtrlr.client.js")
		script(type="text/javascript" src="/controllers/linkCtrlr.client.js")